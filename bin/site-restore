#!/usr/bin/env bash

set -a; source $(dirname $0)/../.env; set +a

mkdir -p $BACKUP_DIR

aws s3 sync --no-follow-symlinks $CMS_BUCKET_PREFIX/sync $GHOST_DIR/

VERSION=$(jq -r '."active-version"'  ${GHOST_DIR}/.ghost-cli)
VERSION_BACKUP_FILENAME="version-${VERSION}.tbz2"
if [[ ! -d ${GHOST_DIR}/versions/${VERSION} ]]
then
  aws s3 cp  $CMS_BUCKET_PREFIX/$VERSION_BACKUP_FILENAME ${BACKUP_DIR}/${VERSION_BACKUP_FILENAME}
  (cd /; tar xvf ${BACKUP_DIR}/${VERSION_BACKUP_FILENAME})
fi
ln -s $GHOST_DIR/versions/$VERSION  $GHOST_DIR/current

sudo mkdir -p $GHOST_DIR/content/logs
sudo chown -R ghost:ghost $GHOST_DIR/content/logs
sudo find $GHOST_DIR/ ! -path "./versions/*" -type f -exec chmod 664 {} \;

# Generate config file

cat ${TEMPLATE_DIR}/config.production.json | ${GS_BIN}/mo > ${GHOST_DIR}/config.production.json

# Start last to make sure that the starter doesn't start before the ghost site is installed
sudo rm /etc/nginx/sites-enabled/* 2>/dev/null

cat ${TEMPLATE_DIR}/nginx-ssl | ${GS_BIN}/mo > /tmp/${CMS_HOSTNAME}-ssl.conf
sudo mv /tmp/${CMS_HOSTNAME}-ssl.conf /etc/nginx/sites-enabled/${CMS_HOSTNAME}-ssl.conf
sudo systemctl restart nginx

cd $GHOST_DIR
ghost setup --no-prompt --no-nginx --no-start

${GS_BIN}/ghost-start
