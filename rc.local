#!/bin/bash -x

INSTALL_DIR=/var/www/ghost-serverless

START_TS=$(date +%s)

while ! aws sts get-caller-identity
do
  echo "Missing IAM Role or not attached , sleeping 5"
  sleep 5
done

# Setup the .env
$INSTALL_DIR/bin/update-env
source $INSTALL_DIR/.env

hostname $( echo $CMS_HOSTNAME | tr . - )

# Want to setup the DNS record early so DNS has time to update
IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
TTL=60
aws route53 change-resource-record-sets --hosted-zone-id $ZONE_ID --change-batch '{"Changes":[{"Action":"UPSERT","ResourceRecordSet":{"Name":"'$CMS_HOSTNAME'","Type":"A","TTL":'$TTL',"ResourceRecords":[{"Value":"'$IP'"}]}}]}'

mkdir -p /var/www/ghost $INSTALL_DIR $WEB_DIR $BACKUP_DIR
chown -R ubuntu:ubuntu /var/www /home/ubuntu $INSTALL_DIR
chmod 775 /var/www/ghost

# curl https://get.acme.sh | sh -s email=certs@daringway.com --home /etc/letsencrypt/
# Wrap this in a webserver so you can see the status from the browser (Or at least give steps and not full logs)
su ubuntu -c $INSTALL_DIR/bin/site-restore

# Setup firewall
# ufw allow 'Nginx Full'
# TODO update nginx upload limit

for DIR in $(ls -d $INSTALL_DIR/services/*)
do
  (cd $DIR; npm install)
done

# Setup ghost-serverless services
su ubuntu -c "cd $INSTALL_DIR; pm2 start ecosystem.config.js"

echo "ghost-serverless ts $(( $(date +%s) - $START_TS )): ghost-serverless site restored"
echo "ghost-serverless ts $(( $(date +%s) - $START_TS )): done"
